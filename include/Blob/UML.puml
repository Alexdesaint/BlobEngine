@startuml
title BlobEngine

namespace Blob {

    namespace GL {
        class Core {
        }

        'Core <.. Blob.Window
        Core <.. Blob.Blob
        VAO <-- Blob.Model
        Indices <-- Blob.Model
        Texture <-- Blob.Material
        Shader <-- Blob.Material
        VBO <-right- VAO
        VBO <-left- Indices
    }

    Material <-- Model

    Model <--o Shape
    Shape o-up-> Shape
    Shape <--o Scene

    Scene <-- Blob
    Camera <-- Scene

    ProjectionTransform <|-- Blob

    Window <|-- Blob

    class Blob {
      + draw()
    }

    ModelTransform <|-- Shape
    ModelTransform <|-- Scene
    ModelTransform <|-left- Model

    ViewTransform <|-- Camera
    Window .up.> Controls
    Blob .up.> ShapesAndImGUI
    Blob .up.> ImGUI


    class Color {
        +r : char
        +g : char
        +b : char
        +a : char
    }
}
@enduml
@startuml
title BlobEngine

title BlobEngine 2D collision

namespace Blob {

    class Object <Entity> {
    }

    EntityRegistry *-up-> Object


    namespace Collision {
        CollisionManager --> Blob.EntityRegistry
        CollisionManager .up.> HitBox
        CollisionManager .up.> Velocity


        Blob.Object o-up-> Velocity
        Blob.Object o-up-> HitBox

        class CollisionManager <System> {

        }

        class HitBox <Component> {
            + x : float
            + y : float
            + w : float
            + h : float
        }
        class Velocity <Component> {
            + dx : float
            + dy : float
        }
    }

    class Vec2f {
        + x : float
        + y : float
    }
}
@enduml
