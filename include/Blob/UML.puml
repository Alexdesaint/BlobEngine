@startuml
title BlobEngine

namespace Blob {

    namespace GL {
        class Core {
        }

        'Core <.. Blob.Window
        Core <.. Blob.Window
        VAO <--* Blob.Mesh
        Indices <--* Blob.Mesh
        Texture <.. Blob.Material
        Shader <--* Blob.Material
        VBO <-right- VAO
        VBO <-left- Indices
    }
    interface Material
    Material <-- Mesh
    Material <|-- SingleColorMaterial

    Mesh <-- Shape
    Shape -up-> Shape
    Shape <-- Scene

    Scene <-- Window
    Camera <-- Scene
    Light <-- Scene

    ProjectionTransform <|-- Window

    WindowCore <|-- Window

    class Window {
      + draw()
    }

    ModelTransform <|-- Shape

    ViewTransform <|-- Camera
    WindowCore .up.> Controls
    Window .up.> Shapes
    ImGUI <--* Window

    class Color {
        +r : float
        +g : float
        +b : float
        +a : float
    }
}
@enduml
@startuml
title BlobEngine

title BlobEngine 2D collision

namespace Blob {

    class Object <Entity> {
    }

    EntityRegistry *-up-> Object


    namespace Collision {
        CollisionManager --> Blob.EntityRegistry
        CollisionManager .up.> HitBox
        CollisionManager .up.> Velocity


        Blob.Object o-up-> Velocity
        Blob.Object o-up-> HitBox

        class CollisionManager <System> {

        }

        class HitBox <Component> {
            + x : float
            + y : float
            + w : float
            + h : float
        }
        class Velocity <Component> {
            + dx : float
            + dy : float
        }
    }

    class Vec2f {
        + x : float
        + y : float
    }
}
@enduml
